<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="13" passed="11" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-04-07T15:12:49 EDT" name="Loan Department" finished-at="2022-04-07T15:12:49 EDT" duration-ms="63">
    <groups>
      <group name="Smoke">
        <method signature="first.Demo()[pri:0, instance:Test.first@3059cbc]" name="Demo" class="Test.first"/>
        <method signature="foutrh.MobileLoginHomeLoan()[pri:0, instance:Test.foutrh@7a419da4]" name="MobileLoginHomeLoan" class="Test.foutrh"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2022-04-07T15:12:49 EDT" name="Personal Loan" finished-at="2022-04-07T15:12:49 EDT" duration-ms="63">
      <class name="Test.foutrh">
        <test-method is-config="true" signature="BeforeMethod()[pri:0, instance:Test.foutrh@7a419da4]" started-at="2022-04-07T15:12:49 EDT" name="BeforeMethod" finished-at="2022-04-07T15:12:49 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="APILoginHomeLoan()[pri:0, instance:Test.foutrh@7a419da4]" started-at="2022-04-07T15:12:49 EDT" name="APILoginHomeLoan" finished-at="2022-04-07T15:12:49 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- APILoginHomeLoan -->
        <test-method is-config="true" signature="BeforeMethod()[pri:0, instance:Test.foutrh@7a419da4]" started-at="2022-04-07T15:12:49 EDT" name="BeforeMethod" finished-at="2022-04-07T15:12:49 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="MobileLoginHomeLoan()[pri:0, instance:Test.foutrh@7a419da4]" started-at="2022-04-07T15:12:49 EDT" name="MobileLoginHomeLoan" finished-at="2022-04-07T15:12:49 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginHomeLoan -->
        <test-method is-config="true" signature="BeforeMethod()[pri:0, instance:Test.foutrh@7a419da4]" started-at="2022-04-07T15:12:49 EDT" name="BeforeMethod" finished-at="2022-04-07T15:12:49 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="WebLoginHomeLoan()[pri:0, instance:Test.foutrh@7a419da4]" started-at="2022-04-07T15:12:49 EDT" name="WebLoginHomeLoan" finished-at="2022-04-07T15:12:49 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebLoginHomeLoan -->
        <test-method is-config="true" signature="AfterTest()[pri:0, instance:Test.foutrh@7a419da4]" started-at="2022-04-07T15:12:49 EDT" name="AfterTest" finished-at="2022-04-07T15:12:49 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTest -->
        <test-method is-config="true" signature="AfterSuite()[pri:0, instance:Test.foutrh@7a419da4]" started-at="2022-04-07T15:12:49 EDT" name="AfterSuite" finished-at="2022-04-07T15:12:49 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterSuite -->
      </class> <!-- Test.foutrh -->
      <class name="Test.second">
        <test-method signature="demon(java.lang.String,java.lang.String)[pri:0, instance:Test.second@2053d869]" started-at="2022-04-07T15:12:49 EDT" name="demon" finished-at="2022-04-07T15:12:49 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[google.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sumitvaghmode@gmail.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demon -->
        <test-method signature="secondDemo1(java.lang.String,java.lang.String)[pri:0, instance:Test.second@2053d869]" started-at="2022-04-07T15:12:49 EDT" name="secondDemo1" data-provider="data" finished-at="2022-04-07T15:12:49 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[pratik]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pk33]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- secondDemo1 -->
        <test-method signature="secondDemo1(java.lang.String,java.lang.String)[pri:0, instance:Test.second@2053d869]" started-at="2022-04-07T15:12:49 EDT" name="secondDemo1" data-provider="data" finished-at="2022-04-07T15:12:49 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sumit]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[su33]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- secondDemo1 -->
      </class> <!-- Test.second -->
      <class name="Test.first">
        <test-method is-config="true" signature="BeforeSuite()[pri:0, instance:Test.first@3059cbc]" started-at="2022-04-07T15:12:49 EDT" name="BeforeSuite" finished-at="2022-04-07T15:12:49 EDT" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeSuite -->
        <test-method is-config="true" signature="BeforeTest()[pri:0, instance:Test.first@3059cbc]" started-at="2022-04-07T15:12:49 EDT" name="BeforeTest" finished-at="2022-04-07T15:12:49 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTest -->
        <test-method is-config="true" signature="BeforeClass()[pri:0, instance:Test.first@3059cbc]" started-at="2022-04-07T15:12:49 EDT" name="BeforeClass" finished-at="2022-04-07T15:12:49 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method is-config="true" signature="BeforeMethod()[pri:0, instance:Test.first@3059cbc]" started-at="2022-04-07T15:12:49 EDT" name="BeforeMethod" finished-at="2022-04-07T15:12:49 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="Demo()[pri:0, instance:Test.first@3059cbc]" started-at="2022-04-07T15:12:49 EDT" name="Demo" finished-at="2022-04-07T15:12:49 EDT" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
        <test-method is-config="true" signature="BeforeMethod()[pri:0, instance:Test.first@3059cbc]" started-at="2022-04-07T15:12:49 EDT" name="BeforeMethod" finished-at="2022-04-07T15:12:49 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="demon(java.lang.String)[pri:0, instance:Test.first@3059cbc]" started-at="2022-04-07T15:12:49 EDT" name="demon" finished-at="2022-04-07T15:12:49 EDT" duration-ms="3" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[google.com]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at Test.first.demon(first.java:27)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demon -->
      </class> <!-- Test.first -->
      <class name="Test.Third">
        <test-method signature="MobileSignCarLoan()[pri:0, instance:Test.Third@3d5c822d]" started-at="2022-04-07T15:12:49 EDT" name="MobileSignCarLoan" finished-at="2022-04-07T15:12:49 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSignCarLoan -->
        <test-method signature="MobileSignOutCarLoan()[pri:0, instance:Test.Third@3d5c822d]" started-at="2022-04-07T15:12:49 EDT" name="MobileSignOutCarLoan" finished-at="2022-04-07T15:12:49 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSignOutCarLoan -->
        <test-method signature="WebLoginCarLoan()[pri:0, instance:Test.Third@3d5c822d]" started-at="2022-04-07T15:12:49 EDT" name="WebLoginCarLoan" finished-at="2022-04-07T15:12:49 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebLoginCarLoan -->
        <test-method signature="MobileLoginCarLoan()[pri:0, instance:Test.Third@3d5c822d]" started-at="2022-04-07T15:12:49 EDT" name="MobileLoginCarLoan" finished-at="2022-04-07T15:12:49 EDT" depends-on-methods="Test.Third.MobileSignCarLoan" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginCarLoan -->
      </class> <!-- Test.Third -->
    </test> <!-- Personal Loan -->
  </suite> <!-- Loan Department -->
</testng-results>
